

import java.util.*;

class Movie {
	
 	String title;
	String director;
	int duration;
	String[] actors;
	String[] roles;
	double rating;
	String genre;

	Movie(String title, String director, int duration, String[] actors, String[] roles, double rating, String genre) {
		this.title = title;
		this.director = director;
		this.duration = duration;
		this.actors = actors;
		this.roles = roles;
		this.rating = rating;
		this.genre = genre;
	}

	public void displayMovieDetails() {
		System.out.println("Movie: " + title);
		System.out.println("Directed by: " + director);
		System.out.println("Duration: " + (duration/60)+"hrs "+(duration%60) + " mins");
		System.out.print("Actors and Roles: ");
		for (int i = 0; i < actors.length; i++) {
			System.out.print(actors[i] + " as " + roles[i]);
			if (i < actors.length - 1) {
				System.out.println("\t");
			}
		}
		System.out.println();
		System.out.println("Rating: " + rating);
		System.out.println("Genre: " + genre);
	}
	}

class Theatres{

	String name;

	String [][] data = new String[4][5];



	Theatres(String name, String [][] data){

		this.name=name;

		for(int i = 0; i < 4; i++)

			this.data[i] = data[i];

	}



	void displayTheatreMDetails(int index){

		String [] dataOnThatDay = data[index];

		System.out.println("\nMovie Screenings on " + dataOnThatDay[0] + " in " + name + " are:");

		for(int i = 1; i < 5 ; ++i) {
			System.out.println(i + ". " + dataOnThatDay[i]);
		}

	}

}


public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		int movieChoice=0;
		String [][][] bigData = 
			{
					{
						{"16.4.24", "Harry Potter and the Philosopher's Stone", "Dilwale Dulhania Le Jayenge", "1920 London", "Kong: Skull Island"},

						{"17.4.24", "Twilight", "Harry Potter and the Philosopher's Stone", "Kong: Skull Island", "The Matrix"},

						{"18.4.24", "The Matrix", "Joker", "Kong: Skull Island", "Bahubali: The Beginning"},

						{"19.4.24", "Tenet", "Godzilla", "Bahubali: The Beginning", "1920 London"}
					},

					{
						{"16.4.24", "Tenet", "Joker", "Bahubali: The Beginning", "The Matrix"},

						{"17.4.24", "1920 London", "Dilwale Dulhania Le Jayenge", "Bahubali: The Beginning", "The Matrix"},

						{"18.4.24", "Dilwale Dulhania Le Jayenge", "Tenet", "Harry Potter and the Philosopher's Stone", "Joker"},

						{"19.4.24", "The Matrix", "Dilwale Dulhania Le Jayenge", "Bahubali: The Beginning", "Kong: Skull Island"},

					},

					{
						{"16.4.24", "The Matrix", "Joker", "Bahubali: The Beginning", "Tenet"},

						{"17.4.24",  "Tenet", "Dune", "1920 London", "Dilwale Dulhania Le Jayenge"},

						{"18.4.24", "The Matrix", "Godzilla", "Bahubali: The Beginning", "Kong: Skull Island"},

						{"19.4.24", "Dune", "Bahubali: The Beginning", "Joker", "Tenet"},
				
					},

					{
						{"16.4.24", "The Matrix", "Dilwale Dulhania Le Jayenge", "Harry Potter and the Philosopher's Stone", "Twilight"},

						{"17.4.24" ,"Tenet", "Dilwale Dulhania Le Jayenge", "The Matrix", "1920 London"},

						{"18.4.24", "Tenet", "Twilight", "Dilwale Dulhania Le Jayenge", "Joker"},

						{"19.4.24", "Bahubali: The Beginning", "Godzilla", "Twilight", "Kong: Skull Island"}
					}

			};
		

		String [] Slots = {"9:00am to 12:00pm","12:30pm to 3:30pm","4:00pm to 7:00pm","8:00pm to 11:00pm"};

		 Movie[] movies = {
            new Movie("Harry Potter and the Philosopher's Stone", "Chris Columbus", 200,
                new String[]{"Daniel Radcliffe", "Rupert Grint", "Emma Watson","Alan Rickman"," Maggie Smith"},
                new String[]{"Harry Potter", "Ron Weasley", "Hermione Granger"," Severus Snape ","Minerva McGonagall "},
                9.0, " Fantasy, Adventure"),
            new Movie("Dilwale Dulhania Le Jayenge", "Aditya Chopra", 250,
                new String[]{"Shah Rukh Khan ", "Kajol", "Amrish Puri","Farida Jalal ","Anupam Kher "},
                new String[]{"Raj Malhotra", "Simran Singh", "Chaudhry Baldev Singh"," Lajwanti Lajjo Singh","Dharamvir Malhotra "},
                9.4, " Romance, Drama"),
            new Movie("1920 London", "Tinu Suresh Desai", 224,
                new String[]{"Sharman Joshi ", "Meera Chopra", "Vishal Karwal","Sushmita Mukherjee ","Surendra Pal ","Gajendra Chauhan "},
                new String[]{"Jai Singh Gujjar", "Shivangi", "Veer Singh","Kesar Maasi"," Tantrik ","Rajasaab "},
                8.1, "Horror, Mystery"),
            new Movie("Kong: Skull Island", "Jordan Vogt-Roberts", 165,
                new String[]{"Tom Hiddleston", "Samuel L. Jackson", "Brie Larson","John C. Reilly "," John Goodman "," Corey Hawkins"},
                new String[]{"James Conrad", "Preston Packard", "Mason Weaver","Hank Marlow ", "Bill Randa ","Houston Brooks "},
                8.4, "Action, Adventure, Fantasy"),
            new Movie("Twilight", "Catherine Hardwicke", 153,
                new String[]{"Kristen Stewart", "Robert Pattinson ", "Taylor Lautner"," Peter Facinelli ","Ashley Gree ","Billy Burke "},
                new String[]{"Bella Swan", "Edward Cullen", "Jacob Black","Carlisle Cullen ","Alice Cullen "," Charlie Swan"},
                8.2, "Romance, Fantasy, Drama"),
            new Movie("The Matrix", "The Wachowskis (Lana Wachowski and Lilly Wachowski)", 183,
                new String[]{"Keanu Reeves", "Laurence Fishburne", "Carrie-Anne Moss","Hugo Weaving ","Joe Pantoliano ","Gloria Foster "},
                new String[]{"Thomas Neo Anderson", "Morpheus", "Trinity","Agent Smith ","Cypher ","The Oracle "},
                8.7, "Science Fiction, Action"),
            new Movie("Bahubali: The Beginning", "S.S. Rajamouli", 193,
                new String[]{"Prabhas ", "Rana Daggubati", "Anushka Shetty","Tamannaah ","Ramya Krishna "," Sathyaraj"},
                new String[]{"Amarendra Baahubali and Mahendra Baahubali", "Bhallaladeva", "Maharani Devasena","Avanthika ","Sivagami Devi "," Kattappa"},
                8.0, "Epic Historical Fiction, Action"),
	    new Movie("Joker", "Todd Phillips", 210,
                new String[]{"Joaquin Phoenix ", "Robert De Niro ", "Zazie Beetz","Frances Conroy ","Brett Cullen "," Shea Whigham"},
                new String[]{"Arthur Fleck / Joker", "Murray Franklin", "Sophie Dumond","Penny Fleck ","Thomas Wayne "," Detective Burke"},
               6.0, "Psychological Thriller, Drama"),
	    new Movie("Tenet", " Christopher Nolan", 180,
                new String[]{"John David Washington  ", "Robert Pattinson", "Elizabeth Debicki ","Kenneth Branagh ","Michael Caine "," Aaron Taylor-Johnson"},
                new String[]{"The Protagonist", "Neil", "Kat", "Andrei Sator ","Sir Michael Crosby ","  Ives"},
                7.0, "Action, Sci-Fi, Thriller"),
	    new Movie("Godzilla", "Gareth Edwards", 120,
                new String[]{"Aaron Taylor-Johnson ", "Bryan Cranston", "Ken Watanabe","Elizabeth Olsen","Sally Hawkins  "},
                new String[]{"Ford Brody", "Joe Brody", "Dr. Ishiro Serizawa"," Elle Brody "," Dr. Vivienne Graham "},
                7.3, "Action, Science Fiction"),
	    new Movie("Dune", "Denis Villeneuve", 190,
                new String[]{"Timothée Chalamet ", "Rebecca Ferguson", "Oscar Isaac","Josh Brolin","Stellan Skarsgård","Dave Bautista ","Zendaya"},
                new String[]{" Paul Atreides", "Lady Jessica", "Duke Leto Atreides"," Gurney Halleck "," Baron Vladimir Harkonnen "," Glossu Rabban ","Chani "},
                9.4, " Science Fiction, Adventure"),
		
        };

		Theatres  theatres [] = new Theatres[4];
		
		String theatreNames [] = {"INOX", "Mukta Theatres", "City Pride", "AURUM"};
  
		String movieNames [] = {"Harry Potter and the Philosopher's Stone","Dilwale Dulhania Le Jayenge","1920 London",
  	"Kong: Skull Island","Twilight","The Matrix","Bahubali: The Beginning","Joker","Tenet","Godzilla","Dune"};
		for(int i = 0; i < 4; ++i) {
			theatres[i] = new Theatres(theatreNames[i],bigData[i]);
		}
	  
	  int rerunChoice=1;
//RUN CODE FROM HERE ON
		
  	do{
		System.out.println("Theatres at your service:");

		for(int i = 0; i < 4; ++i) System.out.println((i + 1) + "] " + theatreNames[i]);

		System.out.print("Choose the Theatre you want to book at: ");

		int theatreChoice = sc.nextInt();



		System.out.println("\nAvailable dates for booking:");

		System.out.println("1] 16.4.24\n2] 17.4.24\n3] 18.4.24\n4] 19.4.24");

		System.out.print("Choose a suitable date: ");

		int dateChoice = sc.nextInt();



	//System.out.println("\nMovie Screenings on "+bigData[theatreChoice-1][dateChoice-1][0]+" at "+theatreNames[theatreChoice-1]+":");

		theatres[theatreChoice - 1].displayTheatreMDetails(dateChoice - 1);
		sc.nextLine();
		boolean flag=false;
		do {
			System.out.println("\nWhat are you Watching then?");
			System.out.print("Type in your Choice: ");

			String movieChoiceS = sc.nextLine();

			for(int k=0;k<11;k++){
				if(movieNames[k].equals(movieChoiceS)){
					movieChoice=k+1;
					flag=true;
					break;
				}
			}
			if(!flag) {
				System.out.println("Incorrect Movie Name entered! Try Again!");
			}
		}while(!flag);
		System.out.println("\nEnter '1' to view Movie Details.\nElse, Enter 0.");

		System.out.print("Your Choice: ");
		int tempChoice=sc.nextInt();

		//The following code will be executed on demand for movie details.. create an obj of the movie details class 

		//and call it with the given parameter

		if(tempChoice==1) {
			movies[movieChoice-1].displayMovieDetails();
		}

		System.out.println("\nSlots Available are:");

		for(int i = 0; i < 4; i++) System.out.println((i + 1) + ": " + Slots[i]);

		System.out.print("Choose a Slot: ");

		int slotChoice = sc.nextInt();

		//Here comes the code for seats followed by (continued booking / final billing)
		//Here comes the code for continued booking i.e.,  final billing
 	//Akshita's Part:-
 	//package seats;

//import java.util.Scanner;
		// TODO Auto-generated method stub
		 int ch;
		 int numrows = 8; 
	     int numcols = 10; 
	     Billing billobj=new Billing();
		 gold goldSeating = new gold(numrows, numcols);
		 silver silverSeating = new silver(numrows, numcols);
		 bronze BronzeSeating = new bronze(numrows, numcols);
		 
	     int countg=0,counts=0,countb=0;

		 do {
			 
		 
	     System.out.println("Which Zone would you like to book a seat in");
	     System.out.println("1.Gold( Rows 1-2, Col:1-10)\n2.Silver(Rows 3-5, Col:1-10)\n3.Bronze(Rows 6-8, Col:1-10)\n4.Seating Arrangement\n5.Exit");
	     ch=sc.nextInt();
	     int n,c;
	     
	     switch(ch) {
	     case 1:
	    	 
		     
	    	 System.out.println("Give row and column:");
		     n=sc.nextInt();
		     c=sc.nextInt();
		     if(n>=1 && n<=2 && c>=1 && c<=10) {
		    	 goldSeating.bookseat(n-1,c-1);
		    	 countg++;
		    	// billobj.calculateTotalCost(theatreChoice-1,movieChoice-1,0);
		    	 }
		     else {
			    	 System.out.println("Row and column entered do not come in gold zone enter again");
			    	 System.out.println("Give row and column:");
			    	 
				     n=sc.nextInt();
				     c=sc.nextInt();
				     goldSeating.bookseat(n-1,c-1);
				     countg++;
			    	// billobj.calculateTotalCost(theatreChoice-1,movieChoice-1,0);
			     }

		     
		     //goldSeating.displayseats();
		     break;
	     
		case 2:
			System.out.println("Give row and column:");
		     n=sc.nextInt();
		     c=sc.nextInt();
		     
		     
		     if(n>=3 && n<=5 && c>=1 && c<=10) {
		    	 silverSeating.bookseat(n-1,c-1);
		    	 counts++;
		    	// billobj.calculateTotalCost(theatreChoice-1,movieChoice-1,1);
		     }
		     else {
		    	 System.out.println("Row and column entered do not come in silver zone enter again");
		    	 System.out.println("Give row and column:");
		    	 
			     n=sc.nextInt();
			     c=sc.nextInt();
		    	 silverSeating.bookseat(n-1,c-1);
		    	 counts++;
		     }
		     
		     //silverSeating.displayseats();
		     break;
	    
	     case 3:
	    	 System.out.println("Give row and column:");
		     n=sc.nextInt();
		     c=sc.nextInt();
	    	 if(n>=6 && n<=8 && c>=1 && c<=10) {
		     BronzeSeating.bookseat(n-1,c-1);
		     countb++;
	    //	 billobj.calculateTotalCost(theatreChoice-1,movieChoice-1,2);

	    	 }
	    	 else {
		    	 System.out.println("Row and column entered do not come in bronze zone enter again");
		    	 System.out.println("Give row and column:");
		    	 
			     n=sc.nextInt();
			     c=sc.nextInt();
		    	 BronzeSeating.bookseat(n-1,c-1);
			     countb++;
		    	//.calculateTotalCost(theatreChoice-1,movieChoice-1,2);
		     }
		     //BronzeSeating.displayseats();
		     break;
	     case 4:
	    	 System.out.println("Gold:-");
			 goldSeating.displayseats(0,2,0,10);	 
			 System.out.println("Silver:-");
			 silverSeating.displayseats(2,5,0,10);	 
			 System.out.println("Bronze:-");
			 BronzeSeating.displayseats(5,8,0,10);
			 break;
	    	 
	    	 
	     case 5:
	    	 break;
	    	 
	     default:
	    	 System.out.println("Invalid choice");
	    	 break;
	     } 
		 }while(ch!=5);
    	 billobj.calculateTotalCost(theatreChoice-1,movieChoice-1,countg,counts,countb);
		 System.out.println("Enter '1' to further continue booking.");
		 rerunChoice=sc.nextInt();
		    }while(rerunChoice==1);
  		
		       
	}
}

	  

abstract class seats{
	boolean[][] seats;
	String seatType;
	public seats(int numrows, int numcol) {
		// TODO Auto-generated constructor stub
	}
	public void seatingarr(int numrows,int numcol){
		seats = new boolean[numrows][numcol];
	}
	void displayseats(int sr,int r,int sc,int co ){
		//System.out.println("Seating Arrangement");
		
		for(int i=sr;i< r;i++) {
			for(int j=sc;j<co;j++) {
				
				if(seats[i][j]) {
					System.out.print("0\t");
				}
				else {
					System.out.print("1\t");
				}
				
				
			}
			System.out.println("\n");
		}
	}
	public abstract void bookseat(int row, int col);
}
class gold extends seats{
	public gold(int numrows, int numcol) {
		super(numrows, numcol);
		seatingarr(numrows, numcol);
		seatType="Gold";
		
	}
	public void bookseat(int row, int col) {
		
		 
		 if (seats[row][col]) {
	            System.out.println("Gold seat already booked. Please select another seat.");
	        } 
		 else {
	            seats[row][col] = true;
	            System.out.println("Gold seat booked !");
	        }
		 if (row < 0 || row >= seats.length || col < 0 || col >= seats[0].length) {
	            System.out.println("Invalid row or column number. Please try again.");
	            return;
	        }
	}
}
class silver extends seats{
	 public silver(int numrows, int numcol) {
	        super(numrows, numcol);
	        seatingarr(numrows, numcol);
	        seatType = "Silver";
	    }
	public void bookseat(int row, int col) {
		if (row < 0 || row >= seats.length || col < 0 || col >= seats[0].length) {
            System.out.println("Invalid row or column number. Please try again.");
            return;
        }

        if (seats[row][col]) {
            System.out.println("Silver seat already booked. Please select another seat.");
        } else {
            seats[row][col] = true;
            System.out.println("Silver seat booked!");
        }
	}
}
class bronze extends seats{
	 public bronze(int numrows, int numcol) {
	        super(numrows, numcol);
	        seatingarr(numrows, numcol);
	        seatType = "Bronze";
	    }
	public void bookseat(int row, int col) {
		if (row < 0 || row >= seats.length || col < 0 || col >= seats[0].length) {
         System.out.println("Invalid row or column number. Please try again.");
         return;
     }

     if (seats[row][col]) {
         System.out.println("Bronze seat already booked. Please select another seat.");
     } else {
         seats[row][col] = true;
         System.out.println("Bronze seat booked!");
     }
	}
	
}
		   
  
class Billing {
    // Define prices for theaters, movies, and seat types
    private static final List<String> theaters = Arrays.asList("INOX", "Mukta Theatres", "City Pride", "AURUM");
    private static final List<String> movies = Arrays.asList("Harry Potter and the Philosopher's Stone",
                                                              "Dilwale Dulhania Le Jayenge",
                                                              "1920 London",
                                                              "Kong: Skull Island",
                                                              "Twilight",
                                                              "The Matrix",
                                                              "Bahubali: The Beginning",
                                                              "Joker",
                                                              "Tenet",
                                                              "Godzilla",
                                                              "Dune");
    private static final List<String> seatTypes = Arrays.asList("Gold", "Silver", "Bronze");
    //ISKA DEKHNA HAII
    
    
    
    
    //DEKHO DEKHO KYA YE PED HAI
    private static final double[] theaterPrices = {55,65,80,60};  // Prices for AURUM
   
    private static final double[] moviePrices = {50.0, 60.0, 55.0, 65.0, 55.0, 65.0, 60.0, 55.0, 70.0, 65.0, 70.0};
    private static final double[] seatPrices = {100.0, 80.0, 60.0};
    double subtotal = 0;
    

    public void calculateTotalCost(int theaterIndex, int movieIndex,int countg,int counts,int countb) {
        double theaterPrice = theaterPrices[theaterIndex];
        double moviePrice = moviePrices[movieIndex];
        
        //double seatPrice = seatPrices[seatIndex];

        // Calculate subtotal
        

        // Print the bill
        printBill(theaterIndex, movieIndex, theaterPrice, moviePrice, seatTypes, seatPrices, countg, counts,countb);

        // Return total cost including tax
    }

    // Method to print the bill
    private void printBill(int theaterIndex, int movieIndex, double theaterPrice, double moviePrice, List<String> seatTypes, double[] seatPrices,
                                   int countg,int counts,int countb) {
        String theaterName = theaters.get(theaterIndex);
        String movieName = movies.get(movieIndex);
        double tax = subtotal * 0.18; // Assuming 19% GST
        double totalCost = subtotal + tax;
        //String seatType = seatTypes.get(seatIndex);
        double gtotal=0,stotal=0,btotal=0;
        System.out.println("\n*");
        System.out.println("************ MOVIE BILL ***********");
        System.out.println("*\n");
        System.out.println("Theater: " + theaterName);
        System.out.println("Movie: " + movieName);
        if(countg>0) {
        System.out.println("Seat Type: " + seatTypes.get(0));
        System.out.print("\t"+countg);
        System.out.println("\t"+(gtotal=(theaterPrice + moviePrice + seatPrices[0])));
        System.out.println("-----------------------------------");
        //System.out.println("Theater Price: ₹" + );
        //System.out.println("Movie Price: ₹" + );
        }
        if(counts>0) {
        System.out.println("Seat Type: " + seatTypes.get(1));
        System.out.print("\t"+counts);
        System.out.println("\t"+(stotal=(theaterPrice + moviePrice + seatPrices[1])));
        System.out.println("-----------------------------------");
        //System.out.println("Theater Price: ₹" + );
        //System.out.println("Movie Price: ₹" + );
        }
        if(countb>0) {
        System.out.println("Seat Type: " + seatTypes.get(2));
        System.out.print("\t"+countb);
        System.out.println("\t"+(btotal=((theaterPrice + moviePrice + seatPrices[2]))));
        System.out.println("-----------------------------------");
        //System.out.println("Theater Price: ₹" + );
        //System.out.println("Movie Price: ₹" + );
        }
        this.subtotal=(stotal+gtotal+btotal);
        System.out.println("Subtotal: ₹" + subtotal);
        System.out.println("Tax (GST 18%): ₹" + tax);
        System.out.println("Total Cost: ₹" + totalCost);
        System.out.println("\n*\n");
    }
}
